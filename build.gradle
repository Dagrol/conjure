buildscript {
    repositories {
        maven {
            url 'https://artifactory.palantir.build/artifactory/all-jar/'
        }
    }

    dependencies {
        classpath 'com.netflix.nebula:nebula-dependency-recommender:3.1.0'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:4.4.4'
        classpath 'com.palantir:gradle-baseline-java:0.5.0'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0'
    }
}

plugins {
    id 'com.palantir.git-version' version '0.5.2'
    id 'org.inferred.processors' version '1.2.2'
}

apply plugin: 'java'
apply plugin: 'com.palantir.baseline-config'
apply plugin: 'com.palantir.baseline-idea'
apply plugin: 'org.inferred.processors'

allprojects {
    version gitVersion()
    group 'com.palantir.conjure'

    repositories {
        maven {
            url 'https://artifactory.palantir.build/artifactory/all-jar/'
        }
    }
    apply plugin: 'nebula.dependency-recommender'

    dependencyRecommendations {
        propertiesFile file: project.rootProject.file('versions.props')
    }

    configurations.all {
        resolutionStrategy {
            failOnVersionConflict()
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'com.palantir.baseline-checkstyle'
    apply plugin: 'com.palantir.baseline-eclipse'
    apply plugin: 'com.palantir.baseline-findbugs'
    apply plugin: 'com.palantir.baseline-idea'
    apply plugin: 'org.inferred.processors'
    apply plugin: 'maven-publish'

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    tasks.jacocoTestReport.dependsOn(tasks.test)
    tasks.check.dependsOn(tasks.jacocoTestReport)
    tasks.check.dependsOn(javadoc)

    sourceCompatibility = 1.8

    if (System.env.CIRCLE_TEST_REPORTS) {
        test.reports.junitXml.destination = new File(System.env.CIRCLE_TEST_REPORTS, it.getName())
    }
}

