package test.api;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Objects;

@JsonIgnoreProperties(
        ignoreUnknown = true
)
public final class DoubleExample {
    private final double doubleValue;

    private DoubleExample(@JsonProperty("doubleValue") double doubleValue) {
        this.doubleValue = doubleValue;
    }

    public double getDoubleValue() {
        return this.doubleValue;
    }

    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof DoubleExample && equalTo((DoubleExample) other));
    }

    private boolean equalTo(DoubleExample other) {
        return this.doubleValue == other.doubleValue;
    }

    @Override
    public int hashCode() {
        return Objects.hash(doubleValue);
    }

    @Override
    public String toString() {
        return new StringBuilder("DoubleExample").append("{")
                .append("doubleValue").append(": ").append(doubleValue)
            .append("}")
            .toString();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static final class Builder {
        private double doubleValue;

        public Builder from(DoubleExample other) {
            doubleValue(other.getDoubleValue());
            return this;
        }

        public Builder doubleValue(double doubleValue) {
            this.doubleValue = doubleValue;
            return this;
        }

        public DoubleExample build() {
            return new DoubleExample(doubleValue);
        }
    }
}
