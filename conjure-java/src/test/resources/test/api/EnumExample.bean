package test.api;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Objects;

public final class EnumExample {
    public static final EnumExample ONE = new EnumExample(Value.ONE);

    public static final EnumExample TWO = new EnumExample(Value.TWO);

    private final Value value;

    private final String string;

    private EnumExample(Value value) {
        this.value = value;
        this.string = value.name();
    }

    private EnumExample(String string) {
        this.value = Value.UNKNOWN;
        this.string = string;
    }

    public Value get() {
        return this.value;
    }

    @Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @Override
    public boolean equals(Object other) {
        return (this == other) || (other instanceof EnumExample && this.string.equals(((EnumExample) other).string));
    }

    @Override
    public int hashCode() {
        return this.string.hashCode();
    }

    @JsonCreator
    public static EnumExample valueOf(String value) {
        Objects.requireNonNull(value, "value cannot be null");
        switch (value) {
            case "ONE":
                return ONE;
            case "TWO":
                return TWO;
            default:
                return new EnumExample(value);
        }
    }

    public enum Value {
        ONE,

        TWO,

        UNKNOWN
    }
}
